<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
    <title>title</title>
    <style type="text/css">
        body
        {
            font-family: Arial;
        }
        .button
        {
            width: 100px;
            height: 100px;
        }
    </style>
    <script type="text/javascript">
        //global XMLHttpRequest declaration
        var oReq = getAjax();

        oReq.onreadystatechange = onReadyStateChandeHandler;

        function getAjax() {
            if (window.XMLHttpRequest) {
                return new XMLHttpRequest();
            }
            else {
                return new ActiveXObject("Microsoft.XMLHTTP");
            }
        }

        //figures
        var yourFigure;
        var opponentFigure;

        //change event handler
        function onReadyStateChandeHandler() {
            if (oReq.readyState == 4 && oReq.status == 200) {
                parseRequest(oReq.responseText);
                sendRequest("");
            }
        }

        //send request to keep connection alive.
        function sendRequest(request) {
            if (oReq != null) {
                var name;
                try {
                    name = document.getElementById("Name").value;
                }
                catch (e) {
                    name = "NaN";
                }
                var sUrl = "/name:" + name + request;
                oReq.open("TTT", sUrl, true);
                oReq.send(null);
                document.getElementById("outcome").innerHTML += sUrl + "<br />";
            }
            else {
                window.alert("Error creating XmlHttpRequest object.");
            }
        }

        //button events
        function connect() {
            var ipAddress = document.getElementById("ServerIP").value;
            var port = document.getElementById("ServerPort").value;
            var name = document.getElementById("Name").value;
            var cmd = new command("Connect", name);
            sendRequest(";ip:" + ipAddress + ";port:" + port + "!" + JSON.stringify(cmd));
        }

        function move(name) {
            var reg = /\d/
            var state = reg.exec(name)
            var com = new command("Move", state.toString());
            sendRequest("!" + JSON.stringify(com));
        }

        function invite() {
            var opponentName = document.getElementById("inviteText").value;
            var cmd = new command("Invite", opponentName);
            sendRequest("!" + JSON.stringify(cmd));
        }

        //incoming 
        function parseRequest(request) {
            if (window.JSON && window.JSON.parse) {

                document.getElementById("income").innerHTML += request + "<br />";

                var recCommand = JSON.parse(request);
                switch (recCommand.CurrentCommand) {
                    case "Confirm":
                        break;
                    case "GetPlayers":
                        var players = JSON.parse(recCommand.Data);
                        var playersDiv = document.getElementById("playerList");
                        playersDiv.innerHTML = "";
                        for (var i = 0; i < players.length; i++) {
                            playersDiv.innerHTML += "<li>" + players[i].Name + "<br />";
                        }
                        break;
                    case "Invite":
                        if (confirm("Do you want to play with " + recCommand.Data + "?")) {
                            var cmd = new command("Confirm", recCommand.Data);
                            alert(JSON.stringify(cmd));
                            sendRequest("!" + JSON.stringify(cmd));
                        }
                        else {
                            var cmd = new command("Reject", recCommand.Data);
                            sendRequest("!" + JSON.stringify(cmd));
                        }
                        break;
                    case "StartGame":
                        switch (recCommand.Data) {
                            case "0":
                                yourFigure = "X";
                                opponentFigure = "0";
                                break;
                            case "1":
                                yourFigure = "0";
                                opponentFigure = "X";
                                break;
                        }
                        break;
                    case "YourStep":
                        var button = document.getElementById("Button" + recCommand.Data);
                        button.value = yourFigure;
                        break;
                    case "OpponentStep":
                        var button = document.getElementById("Button" + recCommand.Data);
                        button.value = opponentFigure;
                        break;
                    case "Continue":
                        var cmd = new command("Connect", document.getElementById("Name").value);
                        sendRequest("!" + JSON.stringify(cmd));
                        break;
                    default:
                        alert(recCommand.CurrentCommand);
                        break;
                }
            }
            else {
                alert("No JSON support");
            }
        }

        function command(curCom, dat) {
            this.CurrentCommand = curCom;
            this.Data = dat;
            return this;
        }
        
    </script>
</head>
<body>
    <center>
        <table>
            <tr>
                <td>
                    Server IP address:
                </td>
                <td>
                    <input id="ServerIP" type="text" value="127.0.0.1" /><br />
                </td>
            </tr>
            <tr>
                <td>
                    Server port number:
                </td>
                <td>
                    <input id="ServerPort" type="text" value="10060" /><br />
                </td>
            </tr>
            <tr>
                <td>
                    Name:
                </td>
                <td>
                    <input id="Name" type="text" value="WebClient" /><br />
                </td>
            </tr>
            <tr>
                <td>
                    <input id="inviteButton" value="Invite player" type="button" onclick="invite()" />
                </td>
                <td>
                    <input id="inviteText" type="text" />
                </td>
            </tr>
            <tr>
                <td>
                    Players:
                </td>
                <td>
                    <div id="playerList">
                    </div>
                </td>
            </tr>
            <tr align="center">
                <td colspan="2">
                    <input id="ConnectButton" type="button" value="Connect" onclick="connect()" />
                </td>
            </tr>
        </table>
        <table>
            <tr>
                <td>
                    <input id="Button0" type="button" class="button" onclick="return move(this.id)" />
                </td>
                <td>
                    <input id="Button3" type="button" class="button" onclick="return move(this.id)" />
                </td>
                <td>
                    <input id="Button6" type="button" class="button" onclick="return move(this.id)" />
                </td>
            </tr>
            <tr>
                <td>
                    <input id="Button1" type="button" class="button" onclick="return move(this.id)" />
                </td>
                <td>
                    <input id="Button4" type="button" class="button" onclick="return move(this.id)" />
                </td>
                <td>
                    <input id="Button7" type="button" class="button" onclick="return move(this.id)" />
                </td>
            </tr>
            <tr>
                <td>
                    <input id="Button2" type="button" class="button" onclick="return move(this.id)" />
                </td>
                <td>
                    <input id="Button5" type="button" class="button" onclick="return move(this.id)" />
                </td>
                <td>
                    <input id="Button8" type="button" class="button" onclick="return move(this.id)" />
                </td>
            </tr>
        </table>
    </center>
    <div id="income">
        in:<br />
    </div>
    <div id="outcome">
        out:<br />
    </div>
</body>
</html>
